Description: fix denial of service and possible code execution in gif2tiff tool
Bug: http://bugzilla.maptools.org/show_bug.cgi?id=2451
Bug-Debian: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=742917
Bug-RedHat: https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2013-4243
Origin: other, http://bugzilla.maptools.org/show_bug.cgi?id=2451#c10

Index: tiff-4.0.3/tools/gif2tiff.c
===================================================================
--- tiff-4.0.3.orig/tools/gif2tiff.c	2014-05-05 14:57:36.000000000 -0400
+++ tiff-4.0.3/tools/gif2tiff.c	2014-05-05 15:02:37.316671940 -0400
@@ -280,6 +280,10 @@
         fprintf(stderr, "no colormap present for image\n");
         return (0);
     }
+    if (width == 0 || height == 0) {
+        fprintf(stderr, "Invalid value of width or height\n");
+        return(0);
+    }
     if ((raster = (unsigned char*) _TIFFmalloc(width*height+EXTRAFUDGE)) == NULL) {
         fprintf(stderr, "not enough memory for image\n");
         return (0);
@@ -404,6 +408,10 @@
             fprintf(stderr, "bad input: code=%d is larger than clear=%d\n",code, clear);
             return 0;
         }
+        if (*fill >= raster + width*height) {
+            fprintf(stderr, "raster full before eoi code\n");
+            return 0;
+        }
 	*(*fill)++ = suffix[code];
 	firstchar = oldcode = code;
 	return 1;
@@ -434,6 +442,10 @@
     }
     oldcode = incode;
     do {
+        if (*fill >= raster + width*height) {
+            fprintf(stderr, "raster full before eoi code\n");
+            return 0;
+        }
 	*(*fill)++ = *--stackp;
     } while (stackp > stack);
     return 1;
